swagger: "2.0"
info:
  version: '1.0'
  title: 'SE2-HerokuSiffredi'
  description: '' 
  license:
    name: MIT
    url: https://github.com/zanna-37/se2-HerokuSiffredi
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
    /tasks:
        get:
            summary: Returns a list of all tasks. 
            responses:
                200:
                    description: Array of Task objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Task'
        post:
            summary: Create a new Task
            parameters:
            - in: body
              name: task
              description: The Task that needs to be created
              schema:
                type: object
                properties:
                    exerciseText:
                        type: string
                    rightAnswer:
                        type: string
                    totalPoints:
                        type: number
                    average:
                        type: number
                    categoryID:
                        type: integer
                required:
                - exerciseText        
                - totalPoints
                - categoryID
            responses:
                201:
                    description: Task created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: Task ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some tasks
            parameters:
            - in: body
              name: tasks 
              description: Batch of Tasks to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/Task'
            responses:
                204:
                    description: Updated Tasks
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            parameters:
            - in: body
              name: taskIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Tasks
                404:
                    description: Tasks not found
                    schema:
                        $ref: '#/definitions/Error'
        
    /tasks/{id}:
        get:
            summary: Returns a specific task
            parameters:
            - in: path
              name: id
              description: ID of task
              required: true
              type: integer
            responses:
                200:
                    description: Task object with given ID
                    schema:
                        $ref: '#/definitions/Task'
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific task
            parameters:
            - in: path
              name: id
              description: ID of task
              required: true
              type: integer
            - in: body
              name: task
              schema:
                  properties:
                      exerciseText:
                          type: string
                      rightAnswer:
                          type: string
                      totalPoints:
                          type: number
                      categoryID:
                          type: integer
                  required:
                  - exerciseText
                  - totalPoints
                  - categoryID
            responses:
                204:
                    description: Updated Task
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific task
            parameters: 
            - in: path
              name: id
              description: ID of task
              required: true
              type: integer
            responses:
                204:
                    description: Deleted Task
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'

    /taskCategories:
        get:
            summary: Returns a list of all task categories. 
            responses:
                200:
                    description: Array of TaskCategory objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TaskCategory'
        post:
            summary: Create a new task category
            parameters:
            - in: body
              name: task-category
              description: The TaskCategory that needs to be created
              schema:
                type: object
                properties:
                    name:
                        type: string
                required:
                - name
            responses:
                201:
                    description: TaskCategory created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: TaskCategory ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some task categories
            parameters:
            - in: body
              name: task-categories 
              description: Batch of TaskCategory to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/TaskCategory'
            responses:
                204:
                    description: Updated Task Categories
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            parameters:
            - in: body
              name: task-categoryIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Task Categories
                404:
                    description: TaskCategory not found
                    schema:
                        $ref: '#/definitions/Error'

    /taskCategories/{id}:
        get:
            summary: Returns a specific task category
            parameters:
            - in: path
              name: id
              description: ID of task category
              required: true
              type: integer
            responses:
                200:
                    description: TaskCategory object with given ID
                    schema:
                        $ref: '#/definitions/TaskCategory'
                400:
                    description: Specified ID is not valid
                404:
                    description: No TaskCategory for that ID
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific task category
            parameters:
            - in: path
              name: id
              description: ID of task category
              required: true
              type: integer
            - in: body
              name: task-category
              schema:
                  type: object
                  properties:
                      name:
                          type: string
                  required:
                  - name
            responses:
                204:
                    description: Updated TaskCategory
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No TaskCategory for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific task category
            parameters: 
            - in: path
              name: id
              description: ID of task category
              required: true
              type: integer
            responses:
                204:
                    description: Deleted Task
                404:
                    description: No Task for that ID
                    schema:
                        $ref: '#/definitions/Error'
 
     
    /users:
        get:
            summary: Returns a list of all users. 
            responses:
                200:
                    description: Array of User objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
        post:
            summary: Create a new User
            parameters:
            - in: body
              name: user
              description: The User that needs to be created
              schema:
                type: object
                properties:
                    studentNumber:
                        type: integer
                    name:
                        type: string
                    surname:
                        type: string
                    groupID:
                        type: string
                required:
                - studentNumber
                - name
                - surname
                - groupID
            responses:
                201:
                    description: User created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: User ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some tasks
            parameters:
            - in: body
              name: tasks 
              description: Batch of users to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/User'
            responses:
                204:
                    description: Updated Users
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of tasks
            parameters:
            - in: body
              name: taskIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Users
                404:
                    description: Users not found
                    schema:
                        $ref: '#/definitions/Error'
        

    /users/{id}:
        get:
            summary: Returns a specific user
            parameters:
            - in: path
              name: id
              description: ID of user
              required: true
              type: integer
            responses:
                200:
                    description: User object with given ID
                    schema:
                        $ref: '#/definitions/User'
                400:
                    description: Specified ID is not valid
                404:
                    description: No User for that ID
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific user
            parameters:
            - in: path
              name: id
              description: ID of user
              required: true
              type: integer
            - in: body
              name: user
              schema:
                  properties:
                      studentNumber:
                          type: integer
                      name:
                          type: string
                      surname:
                          type: string
                      groupID:
                          type: string
                  required:
                  - id
                  - studentNumber
            responses:
              204:
                  description: Updated User
              400:
                  description: Bad request
                  schema:
                      $ref: '#/definitions/Error'
              404:
                  description: No User for that ID
                  schema:
                      $ref: '#/definitions/Error'
        delete:
            summary: Delete specific user
            parameters: 
            - in: path
              name: id
              description: ID of user
              required: true
              type: integer
            responses:
                204:
                    description: Deleted User
                404:
                    description: No User for that ID
                    schema:
                        $ref: '#/definitions/Error'
    /groups:
        get:
            summary: Returns a list of all groups. 
            responses:
                200:
                    description: Array of Group objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Group'
        post:
            summary: Create a new Group
            parameters:
            - in: body
              name: group
              description: The Group that needs to be created
              schema:
                type: object
                properties:
                    name:
                        type: string
                    usersIDs:
                        type: array
                        items:
                            type: integer
            responses:
                201:
                    description: Group created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: Group ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some groups
            parameters:
            - in: body
              name: groups 
              description: Batch of Groups to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/Group'
            responses:
                204:
                    description: Updated Groups
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of groups
            parameters:
            - in: body
              name: groupIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Groups
                404:
                    description: Groups not found
                    schema:
                        $ref: '#/definitions/Error'
        

        
    /groups/{id}:
        get:
            summary: Returns a specific Group
            parameters:
            - in: path
              name: id
              description: ID of Group
              required: true
              type: integer
            responses:
                200:
                    description: Group object with given ID
                    schema:
                        $ref: '#/definitions/Group'
                400:
                    description: Specified ID is not valid
                404:
                    description: No Group for that ID
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific group
            parameters:
            - in: path
              name: id
              description: ID of group
              required: true
              type: integer
            - in: body
              name: group
              schema:
                  properties:
                      name:
                          type: string
                      usersIDs:
                          type: array
                          items:
                              type: integer
            responses:
                204:
                    description: Updated Group
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Group for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific group
            parameters: 
            - in: path
              name: id
              description: ID of group
              required: true
              type: integer
            responses:
                204:
                    description: Deleted Group
                404:
                    description: No Group for that ID
                    schema:
                        $ref: '#/definitions/Error'
     
    /courses:
        get:
            summary: Returns a list of all courses. 
            responses:
                200:
                    description: Array of Course objects
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Course'
        post:
            summary: Create a new Course
            parameters:
            - in: body
              name: course
              description: The course that needs to be created
              schema:
                type: object
                properties:
                    name:
                        type: string
                    academicYear:
                        type: string
                        format: date
                required:
                - id
                - name
            responses:
                201:
                    description: Course created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: Course ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some courses
            parameters:
            - in: body
              name: courses 
              description: Batch of courses to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/Course'
            responses:
                204:
                    description: Updated Course
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of courses
            parameters:
            - in: body
              name: coursesIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Courses
                404:
                    description: Courses not found
                    schema:
                        $ref: '#/definitions/Error'
        

    /courses/{id}:
        get:
            summary: Returns a specific course
            parameters:
            - in: path
              name: id
              description: ID of course
              required: true
              type: integer
            responses:
                200:
                    description: Course object with given ID
                    schema:
                        $ref: '#/definitions/Course'
                400:
                    description: Specified ID is not valid
                404:
                    description: No Course for that ID
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific course
            parameters:
            - in: path
              name: id
              description: ID of course
              required: true
              type: integer
            - in: body
              name: course
              schema:
                  properties:
                      name:
                          type: string
                      academicYear:
                          type: string
                          format: date
                  required:
                  - name
                  - academicYear
            responses:
                204:
                    description: Updated Course
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Course for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific course
            parameters: 
            - in: path
              name: id
              description: ID of course
              required: true
              type: integer
            responses:
                204:
                    description: Deleted Course
                404:
                    description: No Course for that ID
                    schema:
                        $ref: '#/definitions/Error'
    
    /exams:
        get:
            summary: Returns all ExamEvents
            responses:
                200:
                    description: Array of ExamEvents objects
                    schema:
                        $ref: '#/definitions/ExamEvent'
        post:
            summary: Create a new ExamEvent
            parameters:
            - in: body
              name: exam-event
              description: The exam that needs to be created
              schema:
                type: object
                properties:
                    avgMark:
                        type: integer
                    defaultDeadlineStart:
                        type: string
                        format: date-time
                    defaultDeadlineEnd:
                        type: string
                        format: date-time
                    examTemplateID:
                        type: string
                required:
                - defaultDeadlineEnd
                - examTemplateID
            responses:
                201:
                    description: ExamEvent created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: ExamEvent ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some exams
            parameters:
            - in: body
              name: exam-events 
              description: Batch of exam-events to be updated
              schema:
                  type: array
                  items:
                      $ref: '#/definitions/ExamEvent'
            responses:
                204:
                    description: Updated ExamEvent
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of exams
            parameters:
            - in: body
              name: examsIDs
              schema:
                  type: array
                  items:
                      type: integer
            responses:
                204:
                    description: Deleted Exams
                404:
                    description: Exams not found
                    schema:
                        $ref: '#/definitions/Error'

    /exams/{id}:
        get:
            summary: Returns a specific ExamEvent
            parameters:
            - in: path
              name: id
              description: ID of ExamEvent
              required: true
              type: integer
            responses:
                200:
                    description: ExamEvent object with given ID
                    schema:
                        $ref: '#/definitions/ExamEvent'
                400:
                    description: Specified ID is not valid
                404:
                    description: No ExamEvent for that ID
        post:
            summary: Not supported
            parameters:
            - in: path
              name: id
              required: true
              type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific exam
            parameters:
            - in: path
              name: id
              description: ID of exam
              required: true
              type: integer
            - in: body
              name: exam
              schema:
                  properties:
                    avgMark:
                        type: integer
                    defaultDeadlineStart:
                        type: string
                        format: date-time
                    defaultDeadlineEnd:
                        type: string
                        format: date-time
                    examTemplateID:
                        type: string
                required:
                - id
                - defaultDeadlineEnd
                - examTemplateID
           responses:
                204:
                    description: Updated Exam
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Exam for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific exam
            parameters: 
              - in: path
                name: id
                description: ID of exam
                required: true
                type: integer
            responses:
                204:
                    description: Deleted Exam
                404:
                    description: No Exam for that ID
                    schema:
                        $ref: '#/definitions/Error'
    /examTemplates:
        get:
            summary: Returns all ExamTemplates
            responses:
                200:
                    description: Array of ExamTemplate
                    schema:
                        $ref: '#/definitions/ExamTemplate'
        post:
            summary: Create a new ExamTemplate
            parameters:
            - in: body
              name: exam-template
              description: The exam template that needs to be created
              schema:
                type: object
                properties:
                    name:
                        type: string
                    questions:
                        type: array
                        items:
                            type: object
                            properties:
                                taskCategoryID:
                                    type: integer
                                numberOfQuestions:
                                    type: integer
                                    minimum: 1
                required:
                - name
                - questions
            responses:
                201:
                    description: ExamTemplate created
                    schema:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: ExamTemplate ID
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Update some exam templates
            parameters:
              - in: body
                name: exam-templates
                description: Batch of exam-templates to be updated
                schema:
                    type: array
                    items:
                        $ref: '#/definitions/ExamTemplate'
            responses:
                204:
                    description: Updated ExamTemplate
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete a batch of exam templates
            parameters:
              - in: body
                name: examtemplatesIDs
                schema:
                    type: array
                    items:
                        type: integer
            responses:
                204:
                    description: Deleted ExamTemplates
                404:
                    description: ExamTemplates not found
                    schema:
                        $ref: '#/definitions/Error'
    
    /examTemplates/{id}:
        get:
            summary: Returns a specific ExamTemplate
            parameters:
              - in: path
                name: id
                description: ID of ExamTemplate
                required: true
                type: integer
            responses:
                200:
                    description: ExamTemplate object with given ID
                    schema:
                        $ref: '#/definitions/ExamTemplate'
                400:
                    description: Specified ID is not valid
                404:
                    description: No ExamTemplate for that ID
        post:
            summary: Not supported
            parameters:
              - in: path
                name: id
                required: true
                type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Updates a specific exam template
            parameters:
              - in: path
                name: id
                description: ID of exam template
                required: true
                type: integer
              - in: body
                name: exam-template
                schema:
                    properties:
                        name:
                            type: string
                        questions:
                            type: array
                            items:
                                type: object
                                properties:
                                    taskCategoryID:
                                        type: integer
                                    numberOfQuestions:
                                        type: integer
                                        minimum: 1
                    required:
                    - name
                    - questions
            responses:
                204:
                    description: Updated Exam Template
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: No Exam Template for that ID
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Delete specific exam template
            parameters: 
              - in: path
                name: id
                description: ID of course
                required: true
                type: integer
            responses:
                204:
                    description: Deleted Exam Template
                404:
                    description: No Exam Template for that ID
                    schema:
                        $ref: '#/definitions/Error'       
    

    /exams/{examID}/tasks/{taskID}:
        get:
            summary: Returns all Submissions
            description: Returns all the instances of Submission corresponding to the specified _examID_ and _taskID_
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: taskID
                description: ID of the Task
                required: true
                type: integer
            responses:
                200:
                    description: Specific Submission object
                    schema:
                        $ref: '#/definitions/Submission'
                400:
                    description: Specified IDs are not valid
                404:
                    description: No Submission found for that examID and taskID
        post:
            summary: Method not allowed
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: taskID
                description: ID of the Task
                required: true
                type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        put:
            summary: Method not allowed
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: taskID
                description: ID of the Task
                required: true
                type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            summary: Method not allowed
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: taskID
                description: ID of the Task
                required: true
                type: integer
            responses:
                405:
                    description: Method not allowed
                    schema:
                        $ref: '#/definitions/Error'

    /exams/{examID}/users/{userID}:
        get:
            summary: Returns an AtomicExam
            description: Returns the instance of AtomicExam corresponding to the specified _examID_ and _userID_
              parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: userID
                description: ID of the User
                required: true
                type: integer
            responses:
                200:
                    description: Specific AtomicExam object
                    schema:
                        $ref: '#/definitions/AtomicExam'
                400:
                    description: Specified IDs are not valid
                404:
                    description: No AtomicExam found for that examID and userID
        post:
            summary: Create an exam instance for a user
            description: Given an exam and a user, it creates an instance of that exam for that user
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: userID
                description: ID of the User
                required: true
                type: integer
              - in: body
                name: atomic-exam
                schema:
                    properties:
                        userID:
                            type: integer
                        examID:
                            type: integer
                        taskIDs:
                            type: array
                            items:
                                type: integer
            responses:
                201:
                    description: Created exam instance
                    schema:
                        type: object
                        properties:
                            atomicExamID: integer
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: Exam not found
                    schema:
                        $ref: '#/definitions/Error'
        patch:
            summary: Final evaluation of exam instance
            parameters:
              - in: path
                name: examID
                description: ID of the ExamEvent
                required: true
                type: integer 
              - in: path
                name: userID
                description: ID of the User
                required: true
                type: integer
              - in: body
                name: atomic-exam
                schema:
                    properties:
                        finalEvaluation:
                        type: object
                        properties:
                            evaluatorUserID:
                                type: integer
                            finalMark:
                                type: number
                            comment:
                                type: string
            responses:
                204:
                    description: Added final evaluation of exam for the student
                400:
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                404:
                    description: Exam not found
                    schema:
                        $ref: '#/definitions/Error'

definitions:
    TaskCategory:
        title: Task Category
        type: object
        properties:
            id:
                type: integer
            name:
                type: string
        required:
        - id
        - name
    Task:        
        title: Task
        type: object
        properties:
            taskID:
                type: string
            exerciseText:
                type: string
            rightAnswer:
                type: string
            totalPoints:
                type: number
            average:
                type: number
            categoryID:
                type: integer
        required:
        - exerciseText        
        - totalPoints
        - categoryID
    User:
        title: User
        type: object
        properties:
            id:
                type: integer
            studentNumber:
                type: integer
            name:
                type: string
            surname:
                type: string
            groupID:
                type: string
        required:
        - id
        - studentNumber
    Group:
        title: Group
        description: Group of users
        type: object
        properties:
            id:
                type: integer
            name:
                type: string
            usersIDs:
                type: array
                items:
                    type: integer
        required:
        - id
        - name
    Course:
        title: Course
        description: Specific courses where exams are templated
        type: object
        properties:
            id:
                type: integer
            name:
                type: string
            academicYear:
                type: string
                format: date
        required:
        - id
        - name
    ExamEvent:
        title: Exam
        description: Describes the exam as an event  with deadlines, templates and statistics related to all marks
        type: object
        properties:
            id:
                type: integer
            avgMark:
                type: integer
            defaultDeadlineStart:
                type: string
                format: date-time
            defaultDeadlineEnd:
                type: string
                format: date-time
            examTemplateID:
                type: string
        required:
        - id
        - defaultDeadlineEnd
        - examTemplateID
    ExamTemplate:
        title: Exam Template
        description: Template of an exam, with information such as number of questions for TaskCategory and name.
        type: object
        properties:
            id:
                type: integer
            name:
                type: string
            questions:
                type: array
                items:
                    type: object
                    properties:
                        taskCategoryID:
                            type: integer
                        numberOfQuestions:
                            type: integer
                            minimum: 1
        required:
        - id
        - name
        - questions
    AtomicExam:
        title: Atomic Exam
        description: The instance of an Exam Event, where tasks from a certain task category are given to the user (or user group) to submit.
        type: object
        properties:
            id:
                type: integer
            userOrGroupID:
                type: string
            taskIDs:
                type: array
                items:
                    type: integer
            examEventID:
                type: string
            finalEvaluation:
                type: object
                properties:
                    evaluatorUserID:
                        type: integer
                    finalMark:
                        type: number
                    comment:
                        type: string
        required:
        - id
        - userOrGroupID
        - taskIDs
        - examEventID
    Submission:
        title: Submission
        type: object
        properties:
            id:
                type: integer
            taskID:
                type: integer
            userID:
                type: integer
            answer:
                type: string
            finalCorrectionID:
                type: integer
        required:
        - id
        - taskID
        - userID
        - answer
    Error:
        title: Error
        type: object
        properties:
            code:
                type: string
            message:
                type: string
        required:
        - code
        - type
